"""empty message

Revision ID: 57fc2f7edc5b
Revises: 
Create Date: 2021-04-21 08:08:39.650220

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '57fc2f7edc5b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=64), nullable=False),
    sa.Column('google_id', sa.String(length=64), nullable=True),
    sa.Column('access_token_nonce', sa.String(length=8), nullable=False),
    sa.Column('google_name', sa.Unicode(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('expert',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=64), nullable=False),
    sa.Column('password_hash', sa.String(length=64), nullable=True),
    sa.Column('password_salt', sa.String(length=64), nullable=True),
    sa.Column('access_token_nonce', sa.String(length=8), nullable=False),
    sa.Column('first_name', sa.String(length=32), nullable=True),
    sa.Column('last_name', sa.String(length=32), nullable=True),
    sa.Column('email_verified', sa.Boolean(create_constraint=False), nullable=False),
    sa.Column('browser_fingerprint', sa.String(length=255), nullable=True),
    sa.Column('google_id', sa.String(length=64), nullable=True),
    sa.Column('is_fraud', sa.Boolean(create_constraint=False), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('feedback',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('expert_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('question',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('expert_id', sa.Integer(), nullable=True),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('file_url', sa.String(length=1024), nullable=True),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('credits', sa.Integer(), nullable=False),
    sa.Column('messages', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscription_package',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=512), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('number_of_questions', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('topic',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('expert_earning',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('expert_id', sa.Integer(), nullable=True),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('score_avg', sa.Float(), nullable=False),
    sa.Column('status', sa.String(length=64), nullable=False),
    sa.ForeignKeyConstraint(['expert_id'], ['expert.id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('expert_rank',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('expert_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('topic_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('score_avg', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['expert_id'], ['expert.id'], ),
    sa.PrimaryKeyConstraint('expert_id', 'topic_id')
    )
    op.create_table('expert_topic',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('expert_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('topic_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['expert_id'], ['expert.id'], ),
    sa.PrimaryKeyConstraint('expert_id', 'topic_id')
    )
    op.create_table('user',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=64), nullable=False),
    sa.Column('password_hash', sa.String(length=64), nullable=True),
    sa.Column('password_salt', sa.String(length=64), nullable=True),
    sa.Column('access_token_nonce', sa.String(length=8), nullable=False),
    sa.Column('nickname', sa.String(length=64), nullable=True),
    sa.Column('free_credit_balance', sa.Integer(), nullable=False),
    sa.Column('paid_credit_balance', sa.Integer(), nullable=False),
    sa.Column('current_question_id', sa.Integer(), nullable=True),
    sa.Column('browser_fingerprint', sa.String(length=255), nullable=True),
    sa.Column('google_id', sa.String(length=64), nullable=True),
    sa.Column('payment_methods', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['current_question_id'], ['question.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('transaction',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_rating',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('question_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('question_id')
    )
    op.create_table('user_subscription_package',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('package_name', sa.String(length=128), nullable=True),
    sa.Column('package_type', sa.String(length=128), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('expired_in', sa.DateTime(), nullable=True),
    sa.Column('number_of_questions', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_subscription_package')
    op.drop_table('user_rating')
    op.drop_table('transaction')
    op.drop_table('user')
    op.drop_table('expert_topic')
    op.drop_table('expert_rank')
    op.drop_table('expert_earning')
    op.drop_table('topic')
    op.drop_table('subscription_package')
    op.drop_table('question')
    op.drop_table('feedback')
    op.drop_table('expert')
    op.drop_table('admin')
    # ### end Alembic commands ###
